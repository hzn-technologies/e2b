# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import network_pb2 as network__pb2


class NetworkStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ConfigurePort = channel.unary_unary(
                '/network.Network/ConfigurePort',
                request_serializer=network__pb2.ConfigurePortRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.ListPorts = channel.unary_unary(
                '/network.Network/ListPorts',
                request_serializer=network__pb2.ListPortsRequest.SerializeToString,
                response_deserializer=network__pb2.ListPortsResponse.FromString,
                )
        self.WatchPorts = channel.unary_stream(
                '/network.Network/WatchPorts',
                request_serializer=network__pb2.WatchPortsRequest.SerializeToString,
                response_deserializer=network__pb2.Port.FromString,
                )


class NetworkServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ConfigurePort(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListPorts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def WatchPorts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NetworkServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ConfigurePort': grpc.unary_unary_rpc_method_handler(
                    servicer.ConfigurePort,
                    request_deserializer=network__pb2.ConfigurePortRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListPorts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListPorts,
                    request_deserializer=network__pb2.ListPortsRequest.FromString,
                    response_serializer=network__pb2.ListPortsResponse.SerializeToString,
            ),
            'WatchPorts': grpc.unary_stream_rpc_method_handler(
                    servicer.WatchPorts,
                    request_deserializer=network__pb2.WatchPortsRequest.FromString,
                    response_serializer=network__pb2.Port.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'network.Network', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Network(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ConfigurePort(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/network.Network/ConfigurePort',
            network__pb2.ConfigurePortRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListPorts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/network.Network/ListPorts',
            network__pb2.ListPortsRequest.SerializeToString,
            network__pb2.ListPortsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def WatchPorts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/network.Network/WatchPorts',
            network__pb2.WatchPortsRequest.SerializeToString,
            network__pb2.Port.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
