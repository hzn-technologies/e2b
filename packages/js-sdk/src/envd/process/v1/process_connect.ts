// @generated by protoc-gen-connect-es v1.4.0 with parameter "target=ts"
// @generated from file envd/process/v1/process.proto (package envd.process.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ConnectRequest, ConnectResponse, ListRequest, ListResponse, SendInputRequest, SendInputResponse, SendSignalRequest, SendSignalResponse, StartRequest, StartResponse, StreamInputRequest, StreamInputResponse, UpdateRequest, UpdateResponse } from "./process_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service envd.process.v1.ProcessService
 */
export const ProcessService = {
  typeName: "envd.process.v1.ProcessService",
  methods: {
    /**
     * @generated from rpc envd.process.v1.ProcessService.List
     */
    list: {
      name: "List",
      I: ListRequest,
      O: ListResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envd.process.v1.ProcessService.Connect
     */
    connect: {
      name: "Connect",
      I: ConnectRequest,
      O: ConnectResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc envd.process.v1.ProcessService.Start
     */
    start: {
      name: "Start",
      I: StartRequest,
      O: StartResponse,
      kind: MethodKind.ServerStreaming,
    },
    /**
     * @generated from rpc envd.process.v1.ProcessService.Update
     */
    update: {
      name: "Update",
      I: UpdateRequest,
      O: UpdateResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Client input stream ensures ordering of messages
     *
     * @generated from rpc envd.process.v1.ProcessService.StreamInput
     */
    streamInput: {
      name: "StreamInput",
      I: StreamInputRequest,
      O: StreamInputResponse,
      kind: MethodKind.ClientStreaming,
    },
    /**
     * @generated from rpc envd.process.v1.ProcessService.SendInput
     */
    sendInput: {
      name: "SendInput",
      I: SendInputRequest,
      O: SendInputResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc envd.process.v1.ProcessService.SendSignal
     */
    sendSignal: {
      name: "SendSignal",
      I: SendSignalRequest,
      O: SendSignalResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

