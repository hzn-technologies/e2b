openapi: 3.0.0
info:
  title: envd
  version: 0.1.0
  description: API for managing files' content and controlling envd

servers:
  - url: /v1

paths:
  /host/sync:
    post:
      summary: Ensure the time and metadata is synced with the host
      responses:
        204:
          description: The time and metadata is synced with the host
        500:
          $ref: "#/components/responses/InternalServerError"

  /health:
    get:
      summary: Check the health of the envd
      responses:
        204:
          description: The envd is healthy
        500:
          $ref: "#/components/responses/InternalServerError"

  /filesystem/files/{path}:
    get:
      summary: Download a file
      parameters:
        - $ref: "#/components/parameters/FilePath"
      responses:
        200:
          $ref: "#/components/responses/DownloadSuccess"
        400:
          $ref: "#/components/responses/DirectoryPathError"
    put:
      summary: Upload a file
      parameters:
        - $ref: "#/components/parameters/FilePath"
        - $ref: "#/components/parameters/User"
        - $ref: "#/components/parameters/Mode"
        - $ref: "#/components/parameters/Overwrite"
      requestBody:
        $ref: "#/components/requestBodies/File"
      responses:
        200:
          $ref: "#/components/responses/ExistingFileUploadSuccess"
        201:
          $ref: "#/components/responses/NewFileUploadSuccess"
        409:
          $ref: "#/components/responses/ConflictError"
        400:
          $ref: "#/components/responses/DirectoryPathError"

components:
  parameters:
    FilePath:
      name: path
      in: path
      required: true
      allowEmptyValue: false
      description: Absolute path to the file, URL encoded.
      schema:
        type: string
    User:
      name: User
      in: query
      required: false
      description: User owning the file
      schema:
        type: string
        default: "root"
    Mode:
      name: Mode
      in: query
      required: false
      description: File permissions in octal format (e.g., 0755)
      schema:
        type: string
        pattern: "^[0-7]{3,4}$"
        default: "0777"
    Overwrite:
      name: overwrite
      in: query
      required: false
      description: Overwrite the file if it exists
      schema:
        type: boolean
        default: true

  requestBodies:
    File:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary

  responses:
    ExistingFileUploadSuccess:
      description: The file was updated successfully.
      headers:
        Cache-Control:
          schema:
            type: string
            example: "no-cache, no-store"
    NewFileUploadSuccess:
      description: The file was created successfully.
      headers:
        Cache-Control:
          schema:
            type: string
            example: "no-cache, no-store"
        Location:
          description: The URL of the uploaded file
          schema:
            type: string
            format: path
    DownloadSuccess:
      description: Entire file downloaded successfully.
      headers:
        Cache-Control:
          schema:
            type: string
            example: "no-cache, no-store"
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
            description: The file content
    DirectoryPathError:
      description: Bad Request - The specified path is a directory. Only files can be downloaded.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    ConflictError:
      description: Conflict - The file already exists and overwrite is false.
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    InternalServerError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"

  schemas:
    Error:
      required:
        - message
        - code
      properties:
        message:
          type: string
          description: Error message
        code:
          type: integer
          description: Error code
