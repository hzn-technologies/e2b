openapi: 3.0.0
info:
  title: envd
  version: 0.1.0
  description: API for managing file operations within the envd service sandbox

paths:
  /{path}:
    get:
      summary: Download a file or a specific byte range from the sandbox
      parameters:
        - $ref: "#/components/parameters/FilePath"
        - $ref: "#/components/parameters/Range"
      responses:
        "200":
          $ref: "#/components/responses/FileDownloadSuccess"
        "206":
          $ref: "#/components/responses/PartialContent"
        "400":
          $ref: "#/components/responses/DirectoryPathError"
        "416":
          $ref: "#/components/responses/RangeNotSatisfiableError"
    post:
      summary: Upload a file to the sandbox
      parameters:
        - $ref: "#/components/parameters/FilePath"
        - $ref: "#/components/parameters/User"
        - $ref: "#/components/parameters/Mode"
        - $ref: "#/components/parameters/Overwrite"
        - $ref: "#/components/parameters/Range"
      requestBody:
        $ref: "#/components/requestBodies/FileUpload"
      responses:
        "200":
          description: The file was uploaded successfully.
        "409":
          $ref: "#/components/responses/ConflictError"
        "400":
          $ref: "#/components/responses/DirectoryPathError"
        "416":
          $ref: "#/components/responses/RangeNotSatisfiableError"

components:
  parameters:
    FilePath:
      name: path
      in: path
      required: true
      allowReserved: true
      allowEmptyValue: false
      description: Absolute path in the sandbox to the file, URL encoded.
      schema:
        type: string
    Range:
      name: Range
      in: header
      required: false
      description: Byte range for downloading or uploading a file, formatted as "bytes=start-end" for downloads and "bytes=start-end/total" for uploads.
      schema:
        type: string
        pattern: '^bytes=\d*-\d*(,\d*-\d*)*|bytes \d*-\d*/\d+$'
    User:
      name: User
      in: header
      required: false
      description: User owning the file
      schema:
        type: string
        default: "root"
    Mode:
      name: Mode
      in: header
      required: false
      description: File permissions in octal format (e.g., 0755)
      schema:
        type: string
        default: "0644"
        pattern: "^[0-7]{3,4}$"
    Overwrite:
      name: overwrite
      in: header
      required: false
      description: Overwrite the file if it exists
      schema:
        type: boolean
        default: false
  requestBodies:
    FileUpload:
      required: true
      content:
        multipart/form-data:
          schema:
            type: object
            properties:
              file:
                type: string
                format: binary
  responses:
    FileDownloadSuccess:
      description: Entire file downloaded successfully.
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    PartialContent:
      description: Specified byte range(s) of the file downloaded successfully.
      content:
        application/octet-stream:
          schema:
            type: string
            format: binary
    DirectoryPathError:
      description: Bad Request - The specified path is a directory. Only files can be downloaded.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "The specified path is a directory. Only files can be downloaded."
    RangeNotSatisfiableError:
      description: Requested Range Not Satisfiable - The specified byte range is outside the size of the file, or the Range header is formatted incorrectly.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "The specified byte range is outside the size of the file, or the Range header is formatted incorrectly."
    ConflictError:
      description: Conflict - The file already exists and overwrite is false.
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "The file already exists and overwrite is false."
