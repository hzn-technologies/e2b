/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */


export interface paths {
  "/deployments": {
    /** Create Agent Deployment */
    put: operations["create_agent_deployment_deployments_put"];
  };
  "/deployments/{id}": {
    /** Get Agent Deployment */
    get: operations["get_agent_deployment_deployments__id__get"];
    /** Delete Agent Deployment */
    delete: operations["delete_agent_deployment_deployments__id__delete"];
  };
  "/deployments/{id}/interactions": {
    /** Interact With Agent Deployment */
    post: operations["interact_with_agent_deployment_deployments__id__interactions_post"];
  };
  "/health": {
    /** Health */
    get: operations["health_health_get"];
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    /** AgentInteraction */
    AgentInteraction: {
      /** Data */
      data?: Record<string, never>;
      /** Interaction Id */
      interaction_id?: string;
      /** Type */
      type: string;
    };
    /** CreateDeploymentBody */
    CreateDeploymentBody: {
      /** Config */
      config?: Record<string, never>;
      /** Secrets */
      secrets?: Record<string, never>;
    };
    /** HTTPValidationError */
    HTTPValidationError: {
      /** Detail */
      detail?: (components["schemas"]["ValidationError"])[];
    };
    /** ValidationError */
    ValidationError: {
      /** Location */
      loc: (string | number)[];
      /** Message */
      msg: string;
      /** Error Type */
      type: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type external = Record<string, never>;

export interface operations {

  /** Create Agent Deployment */
  create_agent_deployment_deployments_put: {
    parameters: {
      query: {
        project_id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["CreateDeploymentBody"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Get Agent Deployment */
  get_agent_deployment_deployments__id__get: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Delete Agent Deployment */
  delete_agent_deployment_deployments__id__delete: {
    parameters: {
      path: {
        id: string;
      };
    };
    responses: {
      /** @description Successful Response */
      204: never;
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Interact With Agent Deployment */
  interact_with_agent_deployment_deployments__id__interactions_post: {
    parameters: {
      path: {
        id: string;
      };
    };
    requestBody: {
      content: {
        "application/json": components["schemas"]["AgentInteraction"];
      };
    };
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
      /** @description Validation Error */
      422: {
        content: {
          "application/json": components["schemas"]["HTTPValidationError"];
        };
      };
    };
  };
  /** Health */
  health_health_get: {
    responses: {
      /** @description Successful Response */
      200: {
        content: {
          "application/json": Record<string, never>;
        };
      };
    };
  };
}
