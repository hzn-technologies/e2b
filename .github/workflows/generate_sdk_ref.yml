name: Generate SDK references

on:
  workflow_dispatch:
  push:
    branches:
      - improved-api-refs
      # - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  contents: write

jobs:
  is_new_sdk_ref:
    name: Is new SDK reference?
    runs-on: ubuntu-latest
    outputs:
      new_sdk_ref: ${{ steps.sdk-changes.outputs.new_sdk_ref }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 2
      
      - name: Check if SDK changes
        id: sdk-changes
        run: |
          IS_NEW_sdk_REF=$(./.github/scripts/is_new_sdk_ref.sh)
          echo "new_sdk_ref=$IS_NEW_sdk_REF" >> "$GITHUB_OUTPUT"

  sdk-changes:
    name: SDK changes
    needs: [is_new_sdk_ref]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        id: pnpm-install
        with:
          version: 9.5

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
          cache: pnpm
          cache-dependency-path: pnpm-lock.yaml

      - name: Configure pnpm
        run: |
          pnpm config set auto-install-peers true
          pnpm config set exclude-links-from-lockfile true

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Set up Python
        id: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.8"

      - name: Install and configure Poetry
        uses: snok/install-poetry@v1
        with:
          version: 1.5.1
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      - name: Install dependencies
        working-directory: ./packages/python-sdk
        run: poetry install --no-interaction --no-root

      - name: Generate Python SDK reference
        id: python-sdk-ref
        working-directory: ./packages/python-sdk
        run: |
          source .venv/bin/activate
          ./scripts/generate_sdk_ref.sh

      - name: Generate JS SDK reference
        id: js-sdk-ref
        working-directory: packages/js-sdk
        run: ./scripts/generate_sdk_ref.sh

      - name: Generate CLI reference
        id: cli-sdk-ref
        working-directory: packages/cli
        run: ./scripts/generate_sdk_ref.sh

      - name: Clone Code Interpreter reference
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://github.com/e2b-dev/code-interpreter -b generate-api-reference-for-code-interpreter-sdk-e2b-1235
          cd code-interpreter
          git sparse-checkout set sdk-reference
          cp -r sdk-reference/* ../apps/web/src/app/\(docs\)/docs/sdk-reference/
          cd ..
          rm -rf code-interpreter

      - name: Clone Desktop reference
        run: |
          git clone --depth 1 --filter=blob:none --sparse https://github.com/e2b-dev/desktop -b generate-api-reference-for-desktop-sdk-e2b-1236
          cd desktop
          git sparse-checkout set sdk-reference
          cp -r sdk-reference/* ../apps/web/src/app/\(docs\)/docs/sdk-reference/
          cd ..
          rm -rf desktop

      - name: Show docs file structure
        run: tree apps/web/src/app/\(docs\)/docs/sdk-reference

      - name: Commit new SDK reference versions
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |  
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add apps/web/src/app/\(docs\)/docs/sdk-reference
          git commit -m "[skip ci] Release new SDK reference doc versions" || exit 0
          git push